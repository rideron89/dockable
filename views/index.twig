<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Dockable</title>

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
    <link rel="stylesheet" href="/dist/main.css" />
</head>
<body>

    <main class="container">
        <h1>Dockable</h1>

        <div class="box naked pos-r">
            <section class="ov-h">
                <p class="fl-l">Welcome to the dashboard.</p>

                <div class="fl-r">
                    {% if user %}
                    <a href="/logout" class="button" id="logout"><i class="material-icons">exit_to_app</i> Logout</a>
                    {% else %}
                    <a href="/login" class="button" id="login-button"><i class="material-icons">person</i>Login</a>
                    {% endif %}
                </div>
            </section>

            <hr />

            <section class="auth-tokens">
                <h2>All Auth Tokens</h2>

                {% if not user %}
                    <p>You must be logged in to view auth tokens.</p>
                {% else %}
                    <p>{{ tokens|length }} token{{ (tokens|length != 1) ? 's' : '' }} found.</p>

                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>_id</th>
                                <th>user.username</th>
                                <th>expires_date</th>
                                <th>Unauthorize</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for token in tokens %}
                            <tr>
                                <td>{{ token['_id'] }}</td>
                                <td title="{{ token['user'].id }}">{{ token['user'].username }}</td>
                                <td title="{{ token['expires_date'] }}">{{ token['expires_date']|date('Y-m-d H:i:s') }}</td>
                                <td class="ta-c"><a href="#" class="button icon danger delete-token" data-token-id="{{ token['_id'] }}"><i class="material-icons">block</i> De-authorize</a></td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </section>

            <section class="users">
                <h2>All Users</h2>

                {% if not user %}
                    <p>You must be logged in to view users.</p>
                {% else %}
                    <p>{{ users|length }} user{{ (users|length != 1) ? 's' : '' }} found.</p>

                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>_id</th>
                                <th>username</th>
                                <th>email</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for user in users %}
                            <tr>
                                <td>{{ user['_id'] }}</td>
                                <td>{{ user['username'] }}</td>
                                <td>{{ user['email'] }}</td>
                                <td class="ta-c"><a href="#" class="button icon success edit-user"
                                        data-user-id="{{ user['_id'] }}"
                                        data-username="{{ user['username'] }}"
                                        data-email="{{ user['email'] }}"><i class="material-icons">mode_edit</i> Edit</a></td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </section>
        </div>

        <div id="login-modal" class="modal">
            <div class="inner">
                <a href="#" class="close-modal"><i class="material-icons">close</i></a>

                <h2>Login</h2>

                <form id="login-form">
                    <fieldset>
                        <label for="login-username">Username</label>
                        <input id="login-username" type="text" />
                    </fieldset>

                    <fieldset>
                        <label for="login-password">Password</label>
                        <input id="login-password" type="password" />
                    </fieldset>

                    <fieldset>
                        <button type="submit">Login</button>

                        <a class="ml-2" href="/register">Register account</a>
                    </fieldset>
                </form>
            </div>
        </div>

        <div class="modal">
            <div class="inner">
                <a href="#" class="close-modal"><i class="material-icons">close</i></a>

                <h2>Edit User</h2>

                <form id="edit-user-form" action="" method="post">
                    <fieldset>
                        <label for="id">ID</label>
                        <input id="id" type="text" disabled="disabled" />
                    </fieldset>

                    <fieldset>
                        <label for="username">Username</label>
                        <input id="username" name="username" type="text" />
                    </fieldset>

                    <fieldset>
                        <label for="email">Email</label>
                        <input id="email" name="email" type="email" />
                    </fieldset>

                    <div>
                        <div id="error-message"></div>
                    </div>

                    <fieldset class="ov-h">
                        <button type="submit" class="fl-r"><i class="material-icons">save</i> Save</button>
                    </fieldset>
                </form>
            </div>
        </div>
    </main>

    <script src="https://unpkg.com/axios@0.17.1/dist/axios.min.js"></script>
    <script>
        // Login button
        if (document.querySelector('#login-button')) {
            document.querySelector('#login-button').addEventListener('click', function(ev) {
                ev.preventDefault();

                let $modal = document.querySelector('#login-modal');

                $modal.classList.add('shown');
            });
        }

        // Logout button
        if (document.querySelector('#logout')) {
            document.querySelector('#logout').addEventListener('click', function(ev) {
                ev.preventDefault();

                axios.post('/api/logout').then(function(response) {
                    window.location.href = window.location.href;
                });
            });
        }

        // Login form
        document.querySelector('#login-form').addEventListener('submit', function(ev) {
            ev.preventDefault();

            let fields = ev.target.querySelectorAll('input');
            let params = new URLSearchParams();

            Array.prototype.slice.call(fields).map((el, index) => {
                params.append(el.id.split('-')[1], el.value);
            });

            axios.post('/api/login', params).then(function(response) {
                window.location.href = '/';
            }).catch(function(error) {
                if (error.response.status === 401) {
                    document.querySelector('#error-message').innerText = 'Incorrect username/password combo';
                }
            });
        });

        // Delete token buttons
        Array.prototype.slice.call(document.querySelectorAll('.delete-token')).forEach(function(elem) {
            elem.addEventListener('click', function(ev) {
                ev.preventDefault();

                let tokenId = ev.currentTarget.dataset.tokenId;

                axios.delete(`/api/token/${tokenId}`).then(function(response) {
                    window.location.href = window.location.href;
                });
            });
        });

        // Edit user buttons
        Array.prototype.slice.call(document.querySelectorAll('.edit-user')).forEach(function(elem) {
            elem.addEventListener('click', function(ev) {
                ev.preventDefault();

                let user = {
                    id:       ev.currentTarget.dataset.userId,
                    username: ev.currentTarget.dataset.username,
                    email:    ev.currentTarget.dataset.email
                };

                let $modal = document.querySelector('.modal');

                $modal.querySelector('#id').value       = user.id;
                $modal.querySelector('#username').value = user.username;
                $modal.querySelector('#email').value    = user.email;

                $modal.classList.add('shown');
            });
        });

        // Modal close icon
        document.querySelector('.close-modal').addEventListener('click', function(ev) {
            ev.preventDefault();

            ev.currentTarget.parentNode.parentNode.classList.remove('shown');
        });

        document.querySelector('#edit-user-form').addEventListener('submit', function(ev) {
            ev.preventDefault();

            let params = new URLSearchParams();
            let fields = ev.currentTarget.querySelectorAll('input');
            let user_id = ev.currentTarget.querySelector('#id').value;

            Array.prototype.slice.call(fields).map((el, index) => {
                params.append(el.id, el.value);
            });

            axios.put(`/api/user/${user_id}`, params).then(function(response) {
                window.location.href = window.location.href
            });
        });
    </script>
</body>
</html>
